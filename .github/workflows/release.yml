name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on semver tags with v prefix like v1.0.0

jobs:
  create-release:
    name: Create or Update Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create or Update GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: PhantomTrace-${{ github.ref_name }}
          body: |
            ## PhantomTrace ${{ github.ref_name }}

            ### Installation
            Download the appropriate binary for your platform below.

            ### What's Changed
            - Release ${{ github.ref_name }}

            **Full Changelog**: https://github.com/${{ github.repository }}/compare/v1.0.0...${{ github.ref_name }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          update: true  # Allows updating release if it already exists

  build-and-upload:
    name: Build and Upload Assets
    needs: create-release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: phantomtrace
            asset_name: phantomtrace-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: phantomtrace.exe
            asset_name: phantomtrace-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: phantomtrace
            asset_name: phantomtrace-macos-x86_64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build release
        run: cargo build --release --target ${{ matrix.target }} --verbose

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: target/${{ matrix.target }}/release/${{ matrix.artifact }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream
